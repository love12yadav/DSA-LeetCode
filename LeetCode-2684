Leetcode-2684. Maximum Number of Moves in a Grid
class Solution {
    public int maxMoves(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int[][] dp = new int[n][m];
        
        for(int[] r:dp){
            Arrays.fill(r,-1);
        }
        int max=0;
        for(int i=0;i<n;i++){
            int res = f(grid,i,0,n,m,dp);
            max = Math.max(res,max);
        }
        return max;
    }

    public int f(int[][] grid,int i,int j,int n,int m,int[][] dp){
        if(i < 0 || i >= n || j >= m) return 0;

        if(dp[i][j]!=-1) return dp[i][j];
        int up=0;
        int right=0;
        int down=0;

        if(i-1>=0 && j+1<m && grid[i-1][j+1]>grid[i][j]){
            up = 1+f(grid,i-1,j+1,n,m,dp);
        }
        if(j+1<m && grid[i][j+1]>grid[i][j]){
            right = 1+ f(grid,i,j+1,n,m,dp);
        }
        if(i+1<n && j+1<m && grid[i+1][j+1]>grid[i][j]){
            down =1+f(grid,i+1,j+1,n,m,dp);
        }
        return dp[i][j] = Math.max(up,Math.max(right,down));
    }
}
