Leetcode-695. Max Area of Island
class Solution {
    public int maxAreaOfIsland(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int visited[][]=new int[n][m];
        int cnt=0;
        int max=Integer.MIN_VALUE;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(visited[i][j]==0 && grid[i][j]==1){
                  cnt = bfs(grid,visited,i,j,0);  
                }
                max= Math.max(max,cnt);
            }
        }
        return max;
    }

    public int bfs(int[][]grid,int[][]visited,int i,int j,int cnt){
        visited[i][j]=1;
        Queue<int[]> q = new LinkedList<>();
        q.offer(new int[]{i,j});
        cnt++;

        int n=grid.length;
        int m=grid[0].length;

        int[][] dir = {{1,0},{0,1},{-1,0},{0,-1}};
        while(!q.isEmpty()){
            int[] curr = q.poll();
            int x = curr[0];
            int y = curr[1];

            for(int k=0;k<4;k++){
                int nx = x + dir[k][0];
                int ny = y + dir[k][1];

                if(nx >=0 && nx <n && ny>=0 && ny<m && grid[nx][ny]==1 && visited[nx][ny]==0){
                    cnt++;
                    visited[nx][ny]=1;
                    q.offer(new int[]{nx,ny});
                }
            }
        }
        return cnt;
    }
}
